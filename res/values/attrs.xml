<?xml version="1.0" encoding="utf-8"?>
<resources>
<declare-styleable name="roundedimageview">
        <attr name="border_thickness" format="dimension" />
        <attr name="border_inside_color" format="color" />
        <attr name="border_outside_color" format="color"></attr>
    </declare-styleable>

    <attr name="borderRadius" format="dimension" />
    <attr name="type">
        <enum name="circle" value="0" />
        <enum name="round" value="1" />
    </attr>

    <declare-styleable name="CornerImageView">
        <attr name="borderRadius" />
        <attr name="type" />
    </declare-styleable>

    <declare-styleable name="HeaderViewPagerLayout">
        <attr name="topHeight" format="dimension" />
    </declare-styleable>

    <declare-styleable name="CouponDisplayView">
        <attr name="gap" format="dimension" />
        <attr name="circle_radius" format="dimension" />
        <attr name="circle_color" format="color" />
    </declare-styleable>
    
<declare-styleable name="PullToRefresh">

        <!-- A drawable to use as the background of the Refreshable View -->
        <attr name="ptrRefreshableViewBackground" format="reference|color" />

        <!-- A drawable to use as the background of the Header and Footer Loading Views -->
        <attr name="ptrHeaderBackground" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views -->
        <attr name="ptrHeaderTextColor" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views Sub Header -->
        <attr name="ptrHeaderSubTextColor" format="reference|color" />

        <!-- Mode of Pull-to-Refresh that should be used -->
        <attr name="ptrMode">
            <flag name="disabled" value="0x0" />
            <flag name="pullFromStart" value="0x1" />
            <flag name="pullFromEnd" value="0x2" />
            <flag name="both" value="0x3" />
            <flag name="manualOnly" value="0x4" />

            <!-- These last two are depreacted -->
            <flag name="pullDownFromTop" value="0x1" />
            <flag name="pullUpFromBottom" value="0x2" />
        </attr>

        <!-- Whether the Indicator overlay(s) should be used -->
        <attr name="ptrShowIndicator" format="reference|boolean" />

        <!-- Drawable to use as Loading Indicator. Changes both Header and Footer. -->
        <attr name="ptrDrawable" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Header View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableStart" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Footer View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableEnd" format="reference" />

        <!-- Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh. -->
        <attr name="ptrOverScroll" format="reference|boolean" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views -->
        <attr name="ptrHeaderTextAppearance" format="reference" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views Sub Header -->
        <attr name="ptrSubHeaderTextAppearance" format="reference" />

        <!-- Style of Animation should be used displayed when pulling. -->
        <attr name="ptrAnimationStyle">
            <flag name="rotate" value="0x0" />
            <flag name="flip" value="0x1" />
        </attr>

        <!-- Whether the user can scroll while the View is Refreshing -->
        <attr name="ptrScrollingWhileRefreshingEnabled" format="reference|boolean" />

        <!--
        	Whether PullToRefreshListView has it's extras enabled. This allows the user to be 
        	able to scroll while refreshing, and behaves better. It acheives this by adding
        	Header and/or Footer Views to the ListView.
        -->
        <attr name="ptrListViewExtrasEnabled" format="reference|boolean" />

        <!--
        	Whether the Drawable should be continually rotated as you pull. This only
        	takes effect when using the 'Rotate' Animation Style.
        -->
        <attr name="ptrRotateDrawableWhilePulling" format="reference|boolean" />

        <!-- BELOW HERE ARE DEPRECEATED. DO NOT USE. -->
        <attr name="ptrAdapterViewBackground" format="reference|color" />
        <attr name="ptrDrawableTop" format="reference" />
        <attr name="ptrDrawableBottom" format="reference" />
        <attr name="ptrFirstPic" format="reference" />
        <attr name="ptrSecondPic" format="reference" />
    </declare-styleable>

    <declare-styleable name="BaseBanner">
        <!-- scale of Banner height and width,height/screenWidth.(0-1)
            scale is 0.5 default for LoopViewPager -->
        <attr name="bb_scale" format="float"/>
        <!--for LoopViewPager start-->
        <!-- is LoopViewPager or not,default true-->
        <attr name="bb_isLoopEnable" format="boolean"/>
        <!-- delay before start scroll,unit second,default 5 seconds -->
        <attr name="bb_delay" format="integer"/>
        <!-- scroll period,unit second,default 5 seconds -->
        <attr name="bb_period" format="integer"/>
        <!-- is auto scroll enable,default true-->
        <attr name="bb_isAutoScrollEnable" format="boolean"/>
        <!-- is smart pause and start -->
        <attr name="bb_isSmart" format="boolean"/>

        <!--for LoopViewPager end-->

        <!-- set bootom bar color,default transparent -->
        <attr name="bb_barColor" format="color"/>
        <!-- set bottom bar show or not when the position is the last -->
        <attr name="bb_isBarShowWhenLast" format="boolean"/>
        <!-- set bottom bar padding,unit dp -->
        <attr name="bb_barPaddingLeft" format="dimension"/>
        <attr name="bb_barPaddingTop" format="dimension"/>
        <attr name="bb_barPaddingRight" format="dimension"/>
        <attr name="bb_barPaddingBottom" format="dimension"/>
        <!-- set title text color,default "#ffffff" -->
        <attr name="bb_textColor" format="color"/>
        <!-- set title text size,unit sp,default 14sp -->
        <attr name="bb_textSize" format="dimension"/>
        <!-- set title show or not,default true  -->
        <attr name="bb_isTitleShow" format="boolean"/>
        <!-- set indicator show or not,default true  -->
        <attr name="bb_isIndicatorShow" format="boolean"/>
        <!-- Gravity.CENTER or Gravity.RIGHT or Gravity.LEFT.if gravity equals
        Gravity.CENTER,title will not be supported,default Gravity.CENTER -->
        <attr name="bb_indicatorGravity">
            <enum name="CENTER" value="17"/>
            <enum name="LEFT" value="3"/>
            <enum name="RIGHT" value="5"/>
        </attr>

    </declare-styleable>

    <declare-styleable name="BaseIndicaorBanner">
        <!-- indicator style,STYLE_DRAWABLE_RESOURCE or STYLE_CORNER_RECTANGLE -->
        <attr name="bib_indicatorStyle">
            <enum name="DRAWABLE_RESOURCE" value="0"/>
            <enum name="CORNER_RECTANGLE" value="1"/>
        </attr>
        <!-- indicator width, unit dp,default 6dp -->
        <attr name="bib_indicatorWidth" format="dimension"/>
        <!-- indicator height,unit dp,default 6dp -->
        <attr name="bib_indicatorHeight" format="dimension"/>
        <!--  gap between two indicators,unit dp,default 6dp -->
        <attr name="bib_indicatorGap" format="dimension"/>

        <!--for CORNER_RECTANGLE start-->
        <!-- indicator select color for STYLE_CORNER_RECTANGLE,default "#ffffff" -->
        <attr name="bib_indicatorSelectColor" format="color"/>
        <!-- indicator unselect color for STYLE_CORNER_RECTANGLE,default "#88ffffff"  -->
        <attr name="bib_indicatorUnselectColor" format="color"/>
        <!-- indicator corner raduis for STYLE_CORNER_RECTANGLE,unit dp,default 3dp -->
        <attr name="bib_indicatorCornerRadius" format="dimension"/>
        <!--for CORNER_RECTANGLE end-->

        <!--for DRAWABLE_RESOURCE start-->
        <!-- indicator select drawable resource for STYLE_DRAWABLE_RESOURCE -->
        <attr name="bib_indicatorSelectRes" format="reference"/>
        <!-- indicator unselect drawable resource for STYLE_DRAWABLE_RESOURCE -->
        <attr name="bib_indicatorUnselectRes" format="reference"/>
        <!--for DRAWABLE_RESOURCE end-->

    </declare-styleable>

    <declare-styleable name="CircleIndicator">

        <attr name="radius_my" format="dimension|reference"/>
        <attr name="dotMargin_my" format="dimension|reference"/>
        <attr name="paddingTop_my" format="dimension|reference"/>
        <attr name="paddingBottom_my" format="dimension|reference"/>
        <attr name="selected_color_my" format="color|reference"/>
        <attr name="unselected_color_my" format="color|reference"/>

    </declare-styleable>

    <declare-styleable name="PullToZoomView">
        <attr name="headerView" format="reference" />
        <attr name="contentView" format="reference" />
        <attr name="zoomView" format="reference" />
        <attr name="isHeaderParallax" format="boolean" />
    </declare-styleable>

    <declare-styleable name="RatingBarView">
        <attr name="starImageSize" format="dimension" />
        <attr name="starCount" format="integer" />
        <attr name="starEmpty" format="reference" />
        <attr name="starFill" format="reference" />

    </declare-styleable>

    <declare-styleable name="MyCircleIndicator">
        <attr name="ci_width" format="dimension"/>
        <attr name="ci_height" format="dimension"/>
        <attr name="ci_margin" format="dimension"/>
        <attr name="ci_animator" format="reference"/>
        <attr name="ci_animator_reverse" format="reference"/>
        <attr name="ci_drawable" format="reference"/>
        <attr name="ci_drawable_unselected" format="reference"/>

        <attr name="ci_orientation" format="enum">
            <!-- Defines an horizontal widget. -->
            <enum name="horizontal" value="0"/>
            <!-- Defines a vertical widget. -->
            <enum name="vertical" value="1"/>
        </attr>

        <attr name="ci_gravity">
            <!-- Push object to the top of its container, not changing its size. -->
            <flag name="top" value="0x30"/>
            <!-- Push object to the bottom of its container, not changing its size. -->
            <flag name="bottom" value="0x50"/>
            <!-- Push object to the left of its container, not changing its size. -->
            <flag name="left" value="0x03"/>
            <!-- Push object to the right of its container, not changing its size. -->
            <flag name="right" value="0x05"/>
            <!-- Place object in the vertical center of its container, not changing its size. -->
            <flag name="center_vertical" value="0x10"/>
            <!-- Grow the vertical size of the object if needed so it completely fills its container. -->
            <flag name="fill_vertical" value="0x70"/>
            <!-- Place object in the horizontal center of its container, not changing its size. -->
            <flag name="center_horizontal" value="0x01"/>
            <!-- Grow the horizontal size of the object if needed so it completely fills its container. -->
            <flag name="fill_horizontal" value="0x07"/>
            <!-- Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. -->
            <flag name="center" value="0x11"/>
            <!-- Grow the horizontal and vertical size of the object if needed so it completely fills its container. -->
            <flag name="fill" value="0x77"/>
            <!-- Additional option that can be set to have the top and/or bottom edges of
            the child clipped to its container's bounds.
            The clip will be based on the vertical gravity: a top gravity will clip the bottom
            edge, a bottom gravity will clip the top edge, and neither will clip both edges. -->
            <flag name="clip_vertical" value="0x80"/>
            <!-- Additional option that can be set to have the left and/or right edges of
            the child clipped to its container's bounds.
            The clip will be based on the horizontal gravity: a left gravity will clip the right
            edge, a right gravity will clip the left edge, and neither will clip both edges. -->
            <flag name="clip_horizontal" value="0x08"/>
            <!-- Push object to the beginning of its container, not changing its size. -->
            <flag name="start" value="0x00800003"/>
            <!-- Push object to the end of its container, not changing its size. -->
            <flag name="end" value="0x00800005"/>
        </attr>

    </declare-styleable>

</resources>